version: "3.7"

services: 
    web_app: 
        build:
            context: .
            dockerfile: Dockerfile
        command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
        ports: 
            - 8000:8000
        restart: "on-failure"
        volumes:
            - .:/home/appuser/test_monitor
        env_file:
            - .env
        depends_on: 
            - postgres_db
            - redis


    postgres_db: 
        image: postgres:11-alpine
        volumes:
            - .data/db:/var/lib/postgresql/
        env_file:
            - .env
        expose:
            - 5432
        environment:
            - 'POSTGRES_HOST=${DB_HOST}'
            - 'POSTGRES_DB=${DB_NAME}'
            - 'POSTGRES_PORT=${DB_PORT}'
            - 'POSTGRES_USER=${DB_USER}'
            - 'POSTGRES_PASSWORD=${DB_PASSWORD}'
        restart: "on-failure"


    redis:
        image: redis:alpine


    celery:
        build:
            context: .
            dockerfile: Dockerfile
        command: bash -c "celery -A test_monitor worker -l info"
        restart: "always"
        volumes:
            - .:/home/appuser/test_monitor
        depends_on:
            - web_app
            - redis

